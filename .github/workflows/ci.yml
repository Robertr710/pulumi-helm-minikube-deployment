name: Python CI/CD Pipeline with Minikube, Docker, and Pulumi

on:
  push:
    branches:
      - main
    paths:
      - 'python-app/**'  # Trigger on changes to your app.py or anything in this directory

jobs:
  build:
    runs-on: ubuntu-latest  # Or whichever runner you prefer

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Set up Minikube
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start

      - name: Build Docker Image
        run: |
          eval $(minikube docker-env)  # Set Minikube's Docker environment
          docker build -t hello-python:latest ./python-app  # Change directory if necessary

      - name: Load Docker Image into Minikube
        run: |
          eval $(minikube docker-env)
          minikube image load hello-python:latest

      - name: Activate Virtual Environment (Pulumi)
        run: |
          cd pulumi-deployment  # Change to your Pulumi project directory
          python -m venv venv
          source venv/bin/activate  # Activating venv for Pulumi

      - name: Install Pulumi and Dependencies
        run: |
          pip install pulumi pulumi_kubernetes  # Ensure dependencies are installed
          pip install -r pulumi-deployment/requirements.txt  # If you have any dependencies listed

      - name: Pulumi Preview
        run: |
          pulumi stack select dev  # Replace with your stack name
          pulumi preview

      - name: Pulumi Up (Deploy)
        run: |
          pulumi up --yes  # Automatically confirm and deploy
